value = value,
lag_value = lag_value,
diff_value = diff_value,
pct_change_value = pct_change_value,
lag_4_value = lag_4_value,
lag_5_value = lag_5_value,
lag_6_value = lag_6_value,
first_value = date[date == min(date)],
last_value = date[date == max(date)],
value_past_100 = min(date[value >= 100])
)
}, by = list(location_key, location, location_type, data_source, measure)] %>%
pivot_wider(
id_cols = c('location_key', 'location', 'location_type','data_source', 'date'),
names_from = 'measure',
values_from = c('value', 'lag_value', 'diff_value',
'pct_change_value', 'lag_4_value', 'lag_5_value',
'lag_6_value')
)
case_100_dates = group_by(all_covid_data_diffs, location_key) %>%
summarize(
date_case_20 = min(date[value_total_cases >= 20])
)
all_covid_data_diffs_dates = left_join(all_covid_data_diffs, case_100_dates) %>%
mutate(
days_since_case_20 = as.numeric(date - date_case_20),
percent_positive_new_tests = diff_value_total_cases / diff_value_tests_with_results
) %>%
arrange(location_key, date)
names(all_covid_data_diffs_dates)
all_covid_data_diffs_dates$value_percent_positive_cases
head(all_covid_data_diffs_dates)
filter(all_covid_data_diffs_dates, location =='United States') %>%
ggplot(aes(date, percent_positive_new_tests)) +
geom_point() +
stat_smooth()
filter(all_covid_data_diffs_dates, location %in%  c(
'United States',
'WA', 'NY', 'CA', 'LA', 'IL', 'NJ'
# , 'FL', 'CO',
# 'MI', 'IL',' 'LA', 'NJ', 'TX', 'GA'
)
) %>%
filter(days_since_case_20 >= 15) %>%
ggplot(aes(value_percent_positive_cases, value_case_fatality_rate, colour = location)) +
geom_point(aes(alpha = days_since_case_20, size = log(value_total_cases))) +
scale_size(guide = F, range = c(0, 3)) +
scale_alpha(guide = F, range = c(0.3, 1)) +
geom_path(aes(alpha = days_since_case_20), size = 0.75) +
scale_y_continuous(breaks = seq(0, 0.1, by = 0.01), limits = c(0, 0.05), labels = percent) +
scale_x_continuous(labels = percent, breaks = seq(0, 0.4, by = 0.1)) +
theme(
strip.background = element_rect(fill = 'darkgray'),
strip.text = element_text(face = 'bold'),
text = element_text(colour = 'white'),
axis.text = element_text(colour = 'white'),
title = element_text(size = 16, colour = 'white'),
axis.title = element_text(size = 14),
legend.text = element_text(size = 12),
plot.caption = element_text(size = 10, hjust = 0),
legend.title = element_text(size = 14),
plot.subtitle = element_text(size = 11, face = 'italic'),
plot.background = element_rect(fill = 'black'),
legend.background = element_rect(fill = 'black'),
panel.background = element_rect(fill = 'black'),
panel.grid.minor  = element_blank(),
panel.grid.major = element_line(size = 0.25),
legend.position = 'bottom'
) +
guides(colour = guide_legend(override.aes = list(size = 2))) +
scale_colour_hue(name = '') +
labs(
x = '\nPercent Positive Cases', y = 'Case Fatality Rate\n',
title = 'Paths of Case Fatality Rates and Positive Test Rates',
subtitle = 'U.S. and Selected States'
)
ggsave('output/positive_cases_vs_case_fatality_rate.png', height = 8, width = 8, units = 'in', dpi = 800)
cfr_states = filter(all_covid_data_diffs_dates, days_since_case_20 >= 0, location_type == 'US State') %>%
ggplot( aes(days_since_case_20, value_case_fatality_rate)) +
geom_hline(aes(yintercept = 0.02), colour = 'black', size = 1.25) +
# geom_hline(aes(yintercept = 0.01), colour = 'orange', size = 1) +
geom_line(aes(group = location), alpha = 0.2) +
scale_y_continuous(labels = percent, breaks = seq(0, 0.25, by = 0.01)) +
geom_line(data = filter(all_covid_data_diffs_dates, days_since_case_20 >= 0, location_type != 'US State'), colour = 'red', size = 1) +
geom_point(data = filter(all_covid_data_diffs_dates, days_since_case_20 >= 0, location_type != 'US State'), colour = 'red', size = 1)
ggplotly(cfr_states)
ggplot(aes(days_since_case_20, diff_value_total_deaths)) +
geom_bar(stat = 'identity')
all_covid_data_diffs_dates$value_total_cases
latest_state_data =
all_covid_data_diffs_dates %>%
group_by(location_key, location) %>%
summarize(
last_cases = tail(value_total_cases, 1),
new_cases = tail(diff_value_total_cases, 1),
last_date = max(date)
)
# create map for all 50 states
US_state_data = left_join(us_states_shp, latest_state_data, by = c('state_abbr' = 'location')) %>%
left_join(state_geo_center)
lower_48 = state.name[!state.name %in% c('Hawaii', 'Alaska')]
lower_48_state_data = filter(US_state_data, name %in% lower_48)
alaska_data = filter(US_state_data, name %in% 'Alaska')
hawaii_data = filter(US_state_data, name %in% 'Hawaii')
world <- ne_countries(scale = "medium", returnclass = "sf")
usa <- subset(world, admin == "United States of America")
v_scale = scale_fill_viridis(name = 'Fill', guide = F)
mainland <- ggplot() +
geom_sf(fill = NA) +
geom_sf(data = lower_48_state_data, aes(fill = log(last_cases)), show.legend = F) +
geom_sf_text(data = lower_48_state_data, aes(long, lat, label = comma(last_cases, accuracy = 1)),
colour = 'black', fontface='bold', size = 2.5) +
v_scale +
coord_sf(crs = st_crs(2163), xlim = c(-2500000, 2500000), ylim = c(-2300000,
730000)) +
labs(x = '', y = '',
caption = 'Chart: Taylor G. White\nData: covidtracking.com',
title = 'U.S. COVID-19 Cases by State', subtitle = sprintf('As of %s',
unique(format(latest_state_data$last_date, '%B %d')))) +
theme_map() +
theme(
axis.ticks = element_blank(),
axis.text = element_blank(),
title = element_text(size = 16),
plot.subtitle = element_text(size = 12),
plot.caption = element_text(hjust = 0)
)
alaska <- ggplot() +
geom_sf(data = alaska_data, aes(fill = log(last_cases))) +
geom_sf_text(data = alaska_data, aes(long, lat, label = comma(last_cases, accuracy = 1)),
colour = 'black', fontface='bold', size = 2.5) +
v_scale +
coord_sf(crs = st_crs(3467), xlim = c(-2400000, 1600000), ylim = c(200000,
2500000), expand = FALSE, datum = NA) +
labs(x='', y='') +
theme_map()
hawaii  <- ggplot(data = hawaii_data) +
geom_sf(data = hawaii_data, aes(fill = log(last_cases))) +
geom_sf_text(data = hawaii_data, aes(long, lat, label = comma(last_cases, accuracy = 1)),
colour = 'black', fontface='bold', size = 2.5) +
v_scale +
coord_sf(crs = st_crs(4135), xlim = c(-161, -154), ylim = c(18,
23), expand = FALSE, datum = NA) +
labs(x='', y='') +
theme_map()
mainland +
annotation_custom(
grob = ggplotGrob(alaska),
xmin = -2750000,
xmax = -2750000 + (1600000 - (-2400000))/2.5,
ymin = -2450000,
ymax = -2450000 + (2500000 - 200000)/2.5
) +
annotation_custom(
grob = ggplotGrob(hawaii),
xmin = -1250000,
xmax = -1250000 + (-154 - (-161))*120000,
ymin = -2450000,
ymax = -2450000 + (23 - 18)*120000
)
ggsave('output/latest_cv_state_map_50.png', height = 6, width = 8, units = 'in', dpi = 800)
##### analyze county level information from NYT #####
# https://transportgeography.org/?page_id=8565
# https://en.wikipedia.org/wiki/Gravity_model_of_trade
# use county by county commute flows as distance estimate or input to gravitational model
# what proportion of the combined counties' population flows between the two counties?
# what proportion of the combined counties' commuters flows between the two counties?
# flights between cities
# https://www.researchgate.net/profile/N_Pavlis/publication/226883469_A_Preliminary_Gravitational_Model_to_Degree_2160/links/53ff0a6c0cf283c3583c3ff9.pdf
nyt_county_data = read_csv('https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv') %>%
arrange(county, state, fips, date)
latest_county_data = group_by(nyt_county_data, county, state, fips) %>%
summarize(
latest_date = max(date),
latest_cases = tail(cases, 1),
latest_deaths = tail(deaths, 1)
)
all_county_data_geo = left_join(us_counties_tigris@data, nyt_county_data, by = c('GEOID' = 'fips')) %>%
mutate(
lat = as.numeric(INTPTLAT),
long = as.numeric(INTPTLON)
)
latest_county_data_geo = left_join(us_counties_tigris@data, latest_county_data, by = c('GEOID' = 'fips')) %>%
mutate(
lat = as.numeric(INTPTLAT),
long = as.numeric(INTPTLON)
)
ggplot() +
geom_sf(data = us_states_shp %>% filter(name %in% lower_48), fill = 'lightgray') +
geom_sf(data = us_counties_shp %>% filter(state_name %in% lower_48)) +
geom_point(data = latest_county_data_geo %>% filter(state %in% lower_48), aes(long, lat, colour = log(latest_cases))) +
transition_states(
date,
transition_length = 2,
state_length = 1
) +
labs(subtitle = 'Date: {frame_time}', x = '', y = '')
# transition_time(date) +
ease_aes('linear')
?transition_time
anim <- ggplot(airquality, aes(Day, Temp)) +
geom_point(aes(colour = factor(Month))) +
transition_time(Day)
airquality$Day
head(all_county_data_geo)
graphics.off()
filter(all_covid_data_diffs_dates, location %in%  c(
'United States',
'WA', 'NY', 'CA', 'LA', 'NJ'
# , 'FL', 'CO',
# 'MI', 'IL',' 'LA', 'NJ', 'TX', 'GA'
)
) %>%
filter(days_since_case_20 >= 15) %>%
ggplot(aes(value_percent_positive_cases, value_case_fatality_rate, colour = location)) +
geom_point(aes(alpha = days_since_case_20, size = log(value_total_cases))) +
scale_size(guide = F, range = c(0, 3)) +
scale_alpha(guide = F, range = c(0.3, 1)) +
geom_path(aes(alpha = days_since_case_20), size = 0.75) +
scale_y_continuous(breaks = seq(0, 0.1, by = 0.01), limits = c(0, 0.05), labels = percent) +
scale_x_continuous(labels = percent, breaks = seq(0, 0.4, by = 0.1)) +
theme(
strip.background = element_rect(fill = 'darkgray'),
strip.text = element_text(face = 'bold'),
text = element_text(colour = 'white'),
axis.text = element_text(colour = 'white'),
title = element_text(size = 16, colour = 'white'),
axis.title = element_text(size = 14),
legend.text = element_text(size = 12),
plot.caption = element_text(size = 10, hjust = 0),
legend.title = element_text(size = 14),
plot.subtitle = element_text(size = 11, face = 'italic'),
plot.background = element_rect(fill = 'black'),
legend.background = element_rect(fill = 'black'),
panel.background = element_rect(fill = 'black'),
panel.grid.minor  = element_blank(),
panel.grid.major = element_line(size = 0.25),
legend.position = 'bottom'
) +
guides(colour = guide_legend(override.aes = list(size = 2))) +
scale_colour_hue(name = '') +
labs(
x = '\nPercent Positive Cases', y = 'Case Fatality Rate\n',
title = 'Paths of Case Fatality Rates and Positive Test Rates',
subtitle = 'U.S. and Selected States'
)
ggsave('output/positive_cases_vs_case_fatality_rate.png', height = 8, width = 8, units = 'in', dpi = 800)
filter(all_covid_data_diffs_dates, location %in%  c(
'United States',
'WA', 'NY', 'CA', 'LA', 'NJ', 'MI', 'FL'
# , 'FL', 'CO',
# 'MI', 'IL',' 'LA', 'NJ', 'TX', 'GA'
)
) %>%
filter(days_since_case_20 >= 15) %>%
ggplot(aes(value_percent_positive_cases, value_case_fatality_rate, colour = location)) +
geom_point(aes(alpha = days_since_case_20, size = log(value_total_cases))) +
scale_size(guide = F, range = c(0, 3)) +
scale_alpha(guide = F, range = c(0.3, 1)) +
geom_path(aes(alpha = days_since_case_20), size = 0.75) +
scale_y_continuous(breaks = seq(0, 0.1, by = 0.01), limits = c(0, 0.05), labels = percent) +
scale_x_continuous(labels = percent, breaks = seq(0, 0.4, by = 0.1)) +
theme(
strip.background = element_rect(fill = 'darkgray'),
strip.text = element_text(face = 'bold'),
text = element_text(colour = 'white'),
axis.text = element_text(colour = 'white'),
title = element_text(size = 16, colour = 'white'),
axis.title = element_text(size = 14),
legend.text = element_text(size = 12),
plot.caption = element_text(size = 10, hjust = 0),
legend.title = element_text(size = 14),
plot.subtitle = element_text(size = 11, face = 'italic'),
plot.background = element_rect(fill = 'black'),
legend.background = element_rect(fill = 'black'),
panel.background = element_rect(fill = 'black'),
panel.grid.minor  = element_blank(),
panel.grid.major = element_line(size = 0.25),
legend.position = 'bottom'
) +
guides(colour = guide_legend(override.aes = list(size = 2))) +
scale_colour_hue(name = '') +
labs(
x = '\nPercent Positive Cases', y = 'Case Fatality Rate\n',
title = 'Paths of Case Fatality Rates and Positive Test Rates',
subtitle = 'U.S. and Selected States'
)
ggsave('output/positive_cases_vs_case_fatality_rate.png', height = 8, width = 8, units = 'in', dpi = 800)
4 * 12
all_covid_data_diffs_dates %>% filter(location == 'WA') %>%
ggplot() +
geom_bar(aes(date, diff_value_total_cases))
all_covid_data_diffs_dates %>% filter(location == 'WA') %>%
ggplot() +
geom_bar(aes(date, diff_value_total_cases), state = 'identity')
all_covid_data_diffs_dates %>% filter(location == 'WA') %>%
ggplot() +
geom_bar(aes(date, diff_value_total_cases), stat = 'identity')
all_covid_data_diffs_dates %>% filter(location == 'CA') %>%
ggplot() +
geom_bar(aes(date, diff_value_total_cases), stat = 'identity')
all_covid_data_diffs_dates %>% filter(location == 'NY') %>%
ggplot() +
geom_bar(aes(date, diff_value_total_cases), stat = 'identity')
all_covid_data_diffs_dates %>% filter(location == 'LA') %>%
ggplot() +
geom_bar(aes(date, diff_value_total_cases), stat = 'identity')
all_covid_data_diffs_dates %>% filter(location == 'MI') %>%
ggplot() +
geom_bar(aes(date, diff_value_total_cases), stat = 'identity')
all_covid_data_diffs_dates %>% filter(location == 'FL') %>%
ggplot() +
geom_bar(aes(date, diff_value_total_cases), stat = 'identity')
all_covid_data_diffs_dates %>% filter(location == 'CO') %>%
ggplot() +
geom_bar(aes(date, diff_value_total_cases), stat = 'identity')
all_covid_data_diffs_dates %>% filter(location == 'WA') %>%
ggplot() +
geom_bar(aes(date, value_total_cases), stat = 'identity')
all_covid_data_diffs_dates %>% filter(location %in% c('WA', 'CA')) %>%
ggplot() +
geom_line(aes(date, value_total_cases))
all_covid_data_diffs_dates %>% filter(location %in% c('WA', 'CA')) %>%
ggplot() +
geom_line(aes(date, value_total_cases, colour = location))
all_covid_data_diffs_dates %>% filter(location %in% c('WA', 'CA', 'NY')) %>%
ggplot() +
geom_line(aes(date, value_total_cases, colour = location))
all_covid_data_diffs_dates %>% filter(location %in% c('WA', 'CA', 'NY', 'FL')) %>%
ggplot() +
geom_line(aes(date, value_total_cases, colour = location))
all_covid_data_diffs_dates %>% filter(location %in% c('WA', 'CA', 'NY', 'FL', 'NJ')) %>%
ggplot() +
geom_line(aes(date, value_total_cases, colour = location))
all_covid_data_diffs_dates %>% filter(location %in% c('WA', 'CA', 'NY', 'FL', 'NJ')) %>%
ggplot() +
geom_line(aes(days_since_case_20, value_total_cases, colour = location))
names(all_covid_data_diffs_dates)
all_covid_data_diffs_dates %>% filter(location %in% c('WA', 'CA', 'NY', 'FL', 'NJ')) %>%
ggplot() +
geom_line(aes(days_since_case_20, pct_change_value_total_cases, colour = location))
all_covid_data_diffs_dates %>% filter(location %in% c('WA', 'CA', 'NY', 'FL', 'NJ')) %>%
ggplot() +
geom_bar(aes(days_since_case_20, pct_change_value_total_cases, colour = location), stat = 'identity')
all_covid_data_diffs_dates %>% filter(location %in% c('WA', 'CA', 'NY', 'FL', 'NJ')) %>%
ggplot() +
geom_bar(aes(days_since_case_20, pct_change_value_total_cases, fill = location), alpha = 0.3, stat = 'identity')
all_covid_data_diffs_dates %>% filter(location %in% c('WA', 'CA', 'NY', 'FL', 'NJ')) %>%
ggplot() +
geom_line(aes(days_since_case_20, pct_change_value_total_cases, fill = location))
names(all_covid_data_diffs_dates)
us_data = filter(all_covid_data_diffs_dates, location == 'US')
ccf(us_data$percent_positive_new_tests, us_data$diff_value_total_cases)
all_covid_data_diffs_dates = left_join(all_covid_data_diffs, case_100_dates) %>%
mutate(
days_since_case_20 = as.numeric(date - date_case_20),
percent_positive_new_tests = diff_value_total_cases / diff_value_tests_with_results
) %>%
arrange(location_key, date)
us_data = filter(all_covid_data_diffs_dates, location == 'US')
ccf(us_data$percent_positive_new_tests, us_data$diff_value_total_cases)
us_data$percent_positive_new_tests
us_data = filter(all_covid_data_diffs_dates, location == 'United States')
ccf(us_data$percent_positive_new_tests, us_data$diff_value_total_cases)
us_data$percent_positive_new_tests
us_data$diff_value_total_cases
us_data$value_total_cases
list(
t = date - min(date),
date = date,
value = value,
lag_value = lag_value,
diff_value = diff_value,
pct_change_value = pct_change_value,
lag_4_value = lag_4_value,
lag_5_value = lag_5_value,
lag_6_value = lag_6_value,
first_value = date[date == min(date)],
last_value = date[date == max(date)],
value_past_100 = min(date[value >= 100])
)
# compute first differences, pct changes, etc.
all_covid_data_diffs =
all_covid_data_stacked[, {
lag_value = lag(value, 1)
diff_value = value - lag_value
pct_change_value = diff_value / lag_value
lag_4_value = lag(value, 4)
lag_5_value = lag(value, 5)
lag_6_value = lag(value, 6)
list(
t = date - min(date),
date = date,
value = value,
lag_value = lag_value,
diff_value = diff_value,
pct_change_value = pct_change_value,
lag_4_value = lag_4_value,
lag_5_value = lag_5_value,
lag_6_value = lag_6_value,
first_value = date[date == min(date)],
last_value = date[date == max(date)],
value_past_100 = min(date[value >= 100])
)
}, by = list(location_key, location, location_type, data_source, measure)] %>%
pivot_wider(
id_cols = c('location_key', 'location', 'location_type','data_source', 'date'),
names_from = 'measure',
values_from = c('value', 'lag_value', 'diff_value',
'pct_change_value', 'lag_4_value', 'lag_5_value',
'lag_6_value')
)
case_100_dates = group_by(all_covid_data_diffs, location_key) %>%
summarize(
date_case_20 = min(date[value_total_cases >= 20])
)
all_covid_data_diffs_dates = left_join(all_covid_data_diffs, case_100_dates) %>%
mutate(
days_since_case_20 = as.numeric(date - date_case_20),
percent_positive_new_tests = diff_value_total_cases / diff_value_tests_with_results
) %>%
arrange(location_key, date)
all_covid_data_diffs_dates = left_join(all_covid_data_diffs, case_100_dates) %>%
mutate(
days_since_case_20 = as.numeric(date - date_case_20),
percent_positive_new_tests = ifelse(t == 0, value_total_cases/value_tests_with_results, diff_value_total_cases / diff_value_tests_with_results)
) %>%
arrange(location_key, date)
all_covid_data_diffs_dates = left_join(all_covid_data_diffs, case_100_dates) %>%
mutate(
days_since_case_20 = as.numeric(date - date_case_20),
percent_positive_new_tests = ifelse(t == 0, value_total_cases/value_tests_with_results, diff_value_total_cases / diff_value_tests_with_results)
) %>%
arrange(location_key, date)
.1*103
10.3 * .65
10.3 * .65 /12/2
10.3 * .65 /12
# compute first differences, pct changes, etc.
all_covid_data_diffs =
all_covid_data_stacked[, {
lag_value = lag(value, 1)
diff_value = value - lag_value
pct_change_value = diff_value / lag_value
lag_4_value = lag(value, 4)
lag_5_value = lag(value, 5)
lag_6_value = lag(value, 6)
list(
t = date - min(date),
date = date,
value = value,
lag_value = lag_value,
diff_value = diff_value,
pct_change_value = pct_change_value,
lag_4_value = lag_4_value,
lag_5_value = lag_5_value,
lag_6_value = lag_6_value,
first_value = date[date == min(date)],
last_value = date[date == max(date)],
value_past_100 = min(date[value >= 100])
)
}, by = list(location_key, location, location_type, data_source, measure)] %>%
pivot_wider(
id_cols = c('location_key', 'location', 'location_type','data_source', 'date'),
names_from = 'measure',
values_from = c('value', 'lag_value', 'diff_value',
'pct_change_value', 'lag_4_value', 'lag_5_value',
'lag_6_value')
)
class(all_covid_data_diffs)
# compute first differences, pct changes, etc.
all_covid_data_diffs =
all_covid_data_stacked[, {
lag_value = lag(value, 1)
diff_value = value - lag_value
pct_change_value = diff_value / lag_value
lag_4_value = lag(value, 4)
lag_5_value = lag(value, 5)
lag_6_value = lag(value, 6)
list(
t = date - min(date),
date = date,
value = value,
lag_value = lag_value,
diff_value = diff_value,
pct_change_value = pct_change_value,
lag_4_value = lag_4_value,
lag_5_value = lag_5_value,
lag_6_value = lag_6_value,
first_value = date[date == min(date)],
last_value = date[date == max(date)],
value_past_100 = min(date[value >= 100])
)
}, by = list(location_key, location, location_type, data_source, measure)] %>%
pivot_wider(
id_cols = c('location_key', 'location', 'location_type','data_source', 'date'),
names_from = 'measure',
values_from = c('value', 'lag_value', 'diff_value',
'pct_change_value', 'lag_4_value', 'lag_5_value',
'lag_6_value')
) %>%
data.table()
58.8 / 100000
1062.8 / 100000
58.8 / 1e5
100.1 / 1e5
1062.8 / 1e5
.90 * 103
.90 * 103 * .65
.90 * 103 * .65 / 12 / 2
.90 * 103000 * .65 / 12 / 2
5000 - 1500
