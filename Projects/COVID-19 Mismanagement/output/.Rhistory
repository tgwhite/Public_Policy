axis.title = element_text(size = 18),
plot.caption = element_text(size = 14, face = 'italic', hjust = 0),
axis.text = element_text(size = 19),
legend.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.position = 'right',
panel.grid.minor = element_blank()
)
combined_plot = plot_grid(mortality_rank_plot, gdp_rank_plot)
save_plot('mortality_growth_comparison_oecd.png', base_height = 14, base_width = 18,
units = 'in', dpi = 600, plot = combined_plot)
covid_stats_by_country$country %>% table()
mortality_rank_plot = ggplot(us_comparator_countries, aes(country_ranked_mortality, mortality_per_100k, fill = mortality_per_100k)) +
geom_bar(stat = 'identity', fill = 'steelblue') +
geom_bar(data = filter(us_comparator_countries, country == 'United States'), fill = 'firebrick', stat = 'identity') +
scale_y_continuous(labels = comma) +
coord_flip() +
theme_bw() +
labs(
title = 'COVID Mortality Rate',
subtitle = 'High income countries, minimum 5M population.',
caption = '\nChart: Taylor G. White\nData: IMF October Economic Outlook, Johns Hopkins CSSE\nVertical lines show median values.',
x = '', y = '\nCOVID-19 Mortality Rate\n(Deaths / 100k Population)') +
geom_hline(aes(yintercept = median_mortality), colour = 'darkslategray', size = 0.75) +
theme(
plot.title = element_text(size = 26),
plot.subtitle = element_text(size = 15, face = 'italic'),
axis.title = element_text(size = 18),
plot.caption = element_text(size = 14, face = 'italic', hjust = 0),
axis.text = element_text(size = 20),
legend.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.position = 'right',
panel.grid.minor = element_blank()
)
gdp_rank_plot = ggplot(us_comparator_countries, aes(country_ranked_gdp, diff_projection_avg/100, fill = diff_projection_avg/100)) +
geom_bar(stat = 'identity', fill = 'steelblue') +
geom_bar(data = filter(us_comparator_countries, country == 'United States'), fill = 'firebrick', stat = 'identity') +
coord_flip() +
theme_bw() +
scale_y_continuous(labels = percent) +
labs(
title = 'Economic Impact of COVID',
subtitle = 'High income countries, minimum 5M population.',
caption = '\n\n\n',
x = '', y = '\nReal GDP Growth\nProjected Difference from Three Year Average') +
geom_hline(aes(yintercept = median_econ_impact/100), colour = 'darkslategray', size = 0.75) +
theme(
plot.title = element_text(size = 26),
plot.subtitle = element_text(size = 15, face = 'italic'),
axis.title = element_text(size = 18),
plot.caption = element_text(size = 14, face = 'italic', hjust = 0),
axis.text = element_text(size = 20),
legend.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.position = 'right',
panel.grid.minor = element_blank()
)
#
# overall_rank_plot = ggplot(latest_jh_data_with_growth, aes(country_ranked_overall, overall_rank, fill = overall_rank)) +
#   geom_bar(stat = 'identity') +
#   scale_y_continuous(labels = percent) +
#   scale_fill_viridis_c(option = 'A', direction = -1) +
#   coord_flip()
combined_plot = plot_grid(mortality_rank_plot, gdp_rank_plot)
save_plot('mortality_growth_comparison_oecd.png', base_height = 15, base_width = 18,
units = 'in', dpi = 600, plot = combined_plot)
title = 'COVID Economic Impact',
subtitle = 'High income countries, minimum 5M population.',
caption = '\n\n\n',
x = '', y = '\nReal GDP Growth\nProjected Difference from Three Year Average') +
geom_hline(aes(yintercept = median_econ_impact/100), colour = 'darkslategray', size = 0.75) +
geom_segment(aes(x = 1, xend = 3, y = 2, 2)) +
theme(
gdp_rank_plot = ggplot(us_comparator_countries, aes(country_ranked_gdp, diff_projection_avg/100, fill = diff_projection_avg/100)) +
geom_bar(stat = 'identity', fill = 'steelblue') +
geom_bar(data = filter(us_comparator_countries, country == 'United States'), fill = 'firebrick', stat = 'identity') +
coord_flip() +
theme_bw() +
scale_y_continuous(labels = percent) +
labs(
title = 'COVID Economic Impact',
subtitle = 'High income countries, minimum 5M population.',
caption = '\n\n\n',
x = '', y = '\nReal GDP Growth\nProjected Difference from Three Year Average') +
geom_hline(aes(yintercept = median_econ_impact/100), colour = 'darkslategray', size = 0.75) +
geom_segment(aes(x = 1, xend = 3, y = 2, 2)) +
theme(
plot.title = element_text(size = 26),
plot.subtitle = element_text(size = 15, face = 'italic'),
axis.title = element_text(size = 18),
plot.caption = element_text(size = 14, face = 'italic', hjust = 0),
axis.text = element_text(size = 20),
legend.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.position = 'right',
panel.grid.minor = element_blank()
)
title = 'COVID Economic Impact',
subtitle = 'High income countries, minimum 5M population.',
caption = '\n\n\n',
x = '', y = '\nReal GDP Growth\nProjected Difference from Three Year Average') +
geom_hline(aes(yintercept = median_econ_impact/100), colour = 'darkslategray', size = 0.75) +
geom_segment(aes(x = 1, xend = 3, y = 2, yend = 2)) +
theme(
gdp_rank_plot = ggplot(us_comparator_countries, aes(country_ranked_gdp, diff_projection_avg/100, fill = diff_projection_avg/100)) +
geom_bar(stat = 'identity', fill = 'steelblue') +
geom_bar(data = filter(us_comparator_countries, country == 'United States'), fill = 'firebrick', stat = 'identity') +
coord_flip() +
theme_bw() +
scale_y_continuous(labels = percent) +
labs(
title = 'COVID Economic Impact',
subtitle = 'High income countries, minimum 5M population.',
caption = '\n\n\n',
x = '', y = '\nReal GDP Growth\nProjected Difference from Three Year Average') +
geom_hline(aes(yintercept = median_econ_impact/100), colour = 'darkslategray', size = 0.75) +
geom_segment(aes(x = 1, xend = 3, y = 2, yend = 2)) +
theme(
plot.title = element_text(size = 26),
plot.subtitle = element_text(size = 15, face = 'italic'),
axis.title = element_text(size = 18),
plot.caption = element_text(size = 14, face = 'italic', hjust = 0),
axis.text = element_text(size = 20),
legend.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.position = 'right',
panel.grid.minor = element_blank()
)
gdp_rank_plot
title = 'COVID Economic Impact',
subtitle = 'High income countries, minimum 5M population.',
caption = '\n\n\n',
x = '', y = '\nReal GDP Growth\nProjected Difference from Three Year Average') +
geom_hline(aes(yintercept = median_econ_impact/100), colour = 'darkslategray', size = 0.75) +
geom_segment(aes(x = 1, xend = 3, y = 0.75 * max(diff_projection_avg/100) , yend = 0.75 * max(diff_projection_avg/100) )) +
theme(
gdp_rank_plot = ggplot(us_comparator_countries, aes(country_ranked_gdp, diff_projection_avg/100, fill = diff_projection_avg/100)) +
geom_bar(stat = 'identity', fill = 'steelblue') +
geom_bar(data = filter(us_comparator_countries, country == 'United States'), fill = 'firebrick', stat = 'identity') +
coord_flip() +
theme_bw() +
scale_y_continuous(labels = percent) +
labs(
title = 'COVID Economic Impact',
subtitle = 'High income countries, minimum 5M population.',
caption = '\n\n\n',
x = '', y = '\nReal GDP Growth\nProjected Difference from Three Year Average') +
geom_hline(aes(yintercept = median_econ_impact/100), colour = 'darkslategray', size = 0.75) +
geom_segment(aes(x = 1, xend = 3, y = 0.75 * max(diff_projection_avg/100) , yend = 0.75 * max(diff_projection_avg/100) )) +
theme(
plot.title = element_text(size = 26),
plot.subtitle = element_text(size = 15, face = 'italic'),
axis.title = element_text(size = 18),
plot.caption = element_text(size = 14, face = 'italic', hjust = 0),
axis.text = element_text(size = 20),
legend.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.position = 'right',
panel.grid.minor = element_blank()
)
gdp_rank_plot
gdp_rank_plot = ggplot(us_comparator_countries, aes(country_ranked_gdp, diff_projection_avg/100, fill = diff_projection_avg/100)) +
geom_bar(stat = 'identity', fill = 'steelblue') +
geom_bar(data = filter(us_comparator_countries, country == 'United States'), fill = 'firebrick', stat = 'identity') +
coord_flip() +
theme_bw() +
scale_y_continuous(labels = percent) +
labs(
title = 'COVID Economic Impact',
subtitle = 'High income countries, minimum 5M population.',
caption = '\n\n\n',
x = '', y = '\nReal GDP Growth\nProjected Difference from Three Year Average') +
geom_hline(aes(yintercept = median_econ_impact/100), colour = 'darkslategray', size = 0.75) +
geom_segment(aes(x = 1, xend = 10, y = 0.75 * max(diff_projection_avg/100) , yend = 0.75 * max(diff_projection_avg/100), size = 1)) +
theme(
plot.title = element_text(size = 26),
plot.subtitle = element_text(size = 15, face = 'italic'),
axis.title = element_text(size = 18),
plot.caption = element_text(size = 14, face = 'italic', hjust = 0),
axis.text = element_text(size = 20),
legend.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.position = 'right',
panel.grid.minor = element_blank()
)
gdp_rank_plot
gdp_rank_plot = ggplot(us_comparator_countries, aes(country_ranked_gdp, diff_projection_avg/100, fill = diff_projection_avg/100)) +
geom_bar(stat = 'identity', fill = 'steelblue') +
geom_bar(data = filter(us_comparator_countries, country == 'United States'), fill = 'firebrick', stat = 'identity') +
coord_flip() +
theme_bw() +
scale_y_continuous(labels = percent) +
labs(
title = 'COVID Economic Impact',
subtitle = 'High income countries, minimum 5M population.',
caption = '\n\n\n',
x = '', y = '\nReal GDP Growth\nProjected Difference from Three Year Average') +
geom_hline(aes(yintercept = median_econ_impact/100), colour = 'darkslategray', size = 0.75) +
geom_segment(aes(x = 1, xend = 10, y = 0.75 * min(diff_projection_avg/100) , yend = 0.75 * min(diff_projection_avg/100), size = 1)) +
theme(
plot.title = element_text(size = 26),
plot.subtitle = element_text(size = 15, face = 'italic'),
axis.title = element_text(size = 18),
plot.caption = element_text(size = 14, face = 'italic', hjust = 0),
axis.text = element_text(size = 20),
legend.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.position = 'right',
panel.grid.minor = element_blank()
)
gdp_rank_plot
title = 'COVID Economic Impact',
subtitle = 'High income countries, minimum 5M population.',
caption = '\n\n\n',
x = '', y = '\nReal GDP Growth\nProjected Difference from Three Year Average') +
geom_hline(aes(yintercept = median_econ_impact/100), colour = 'darkslategray', size = 0.75) +
geom_segment(aes(x = 1, xend = 10, y = .95 * min(diff_projection_avg/100) , yend = .95 * min(diff_projection_avg/100)), size = 1) +
theme(
gdp_rank_plot = ggplot(us_comparator_countries, aes(country_ranked_gdp, diff_projection_avg/100, fill = diff_projection_avg/100)) +
geom_bar(stat = 'identity', fill = 'steelblue') +
geom_bar(data = filter(us_comparator_countries, country == 'United States'), fill = 'firebrick', stat = 'identity') +
coord_flip() +
theme_bw() +
scale_y_continuous(labels = percent) +
labs(
title = 'COVID Economic Impact',
subtitle = 'High income countries, minimum 5M population.',
caption = '\n\n\n',
x = '', y = '\nReal GDP Growth\nProjected Difference from Three Year Average') +
geom_hline(aes(yintercept = median_econ_impact/100), colour = 'darkslategray', size = 0.75) +
geom_segment(aes(x = 1, xend = 10, y = .95 * min(diff_projection_avg/100) , yend = .95 * min(diff_projection_avg/100)), size = 1) +
theme(
plot.title = element_text(size = 26),
plot.subtitle = element_text(size = 15, face = 'italic'),
axis.title = element_text(size = 18),
plot.caption = element_text(size = 14, face = 'italic', hjust = 0),
axis.text = element_text(size = 20),
legend.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.position = 'right',
panel.grid.minor = element_blank()
)
gdp_rank_plot
gdp_rank_plot = ggplot(us_comparator_countries, aes(country_ranked_gdp, diff_projection_avg/100, fill = diff_projection_avg/100)) +
geom_bar(stat = 'identity', fill = 'steelblue') +
geom_bar(data = filter(us_comparator_countries, country == 'United States'), fill = 'firebrick', stat = 'identity') +
coord_flip() +
theme_bw() +
scale_y_continuous(labels = percent) +
labs(
title = 'COVID Economic Impact',
subtitle = 'High income countries, minimum 5M population.',
caption = '\n\n\n',
x = '', y = '\nReal GDP Growth\nProjected Difference from Three Year Average') +
geom_hline(aes(yintercept = median_econ_impact/100), colour = 'darkslategray', size = 0.75) +
geom_segment(aes(x = 10, xend = 20, y = .95 * min(diff_projection_avg/100) , yend = .95 * min(diff_projection_avg/100)), size = 1) +
theme(
plot.title = element_text(size = 26),
plot.subtitle = element_text(size = 15, face = 'italic'),
axis.title = element_text(size = 18),
plot.caption = element_text(size = 14, face = 'italic', hjust = 0),
axis.text = element_text(size = 20),
legend.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.position = 'right',
panel.grid.minor = element_blank()
)
gdp_rank_plot
gdp_rank_plot = ggplot(us_comparator_countries, aes(country_ranked_gdp, diff_projection_avg/100, fill = diff_projection_avg/100)) +
geom_bar(stat = 'identity', fill = 'steelblue') +
geom_bar(data = filter(us_comparator_countries, country == 'United States'), fill = 'firebrick', stat = 'identity') +
coord_flip() +
theme_bw() +
scale_y_continuous(labels = percent) +
labs(
title = 'COVID Economic Impact',
subtitle = 'High income countries, minimum 5M population.',
caption = '\n\n\n',
x = '', y = '\nReal GDP Growth\nProjected Difference from Three Year Average') +
geom_hline(aes(yintercept = median_econ_impact/100), colour = 'darkslategray', size = 0.75) +
geom_segment(aes(x = 1, xend = 15, y = .95 * min(diff_projection_avg/100) , yend = .95 * min(diff_projection_avg/100)), size = 1) +
theme(
plot.title = element_text(size = 26),
plot.subtitle = element_text(size = 15, face = 'italic'),
axis.title = element_text(size = 18),
plot.caption = element_text(size = 14, face = 'italic', hjust = 0),
axis.text = element_text(size = 20),
legend.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.position = 'right',
panel.grid.minor = element_blank()
)
gdp_rank_plot
gdp_rank_plot = ggplot(us_comparator_countries, aes(country_ranked_gdp, diff_projection_avg/100, fill = diff_projection_avg/100)) +
geom_bar(stat = 'identity', fill = 'steelblue') +
geom_bar(data = filter(us_comparator_countries, country == 'United States'), fill = 'firebrick', stat = 'identity') +
coord_flip() +
theme_bw() +
scale_y_continuous(labels = percent) +
labs(
title = 'COVID Economic Impact',
subtitle = 'High income countries, minimum 5M population.',
caption = '\n\n\n',
x = '', y = '\nReal GDP Growth\nProjected Difference from Three Year Average') +
geom_hline(aes(yintercept = median_econ_impact/100), colour = 'darkslategray', size = 0.75) +
geom_segment(aes(x = 5, xend = 20, y = .95 * min(diff_projection_avg/100) , yend = .95 * min(diff_projection_avg/100)), size = 1) +
theme(
plot.title = element_text(size = 26),
plot.subtitle = element_text(size = 15, face = 'italic'),
axis.title = element_text(size = 18),
plot.caption = element_text(size = 14, face = 'italic', hjust = 0),
axis.text = element_text(size = 20),
legend.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.position = 'right',
panel.grid.minor = element_blank()
)
gdp_rank_plot
mortality_rank_plot = ggplot(us_comparator_countries, aes(country_ranked_mortality, mortality_per_100k, fill = mortality_per_100k)) +
geom_bar(stat = 'identity', fill = 'steelblue') +
geom_bar(data = filter(us_comparator_countries, country == 'United States'), fill = 'firebrick', stat = 'identity') +
scale_y_continuous(labels = comma) +
coord_flip() +
theme_bw() +
labs(
title = 'COVID Mortality Rate',
subtitle = 'High income countries, minimum 5M population.',
caption = '\nChart: Taylor G. White\nData: IMF October Economic Outlook, Johns Hopkins CSSE\nVertical lines show median values.',
x = '', y = '\nCOVID-19 Mortality Rate\n(Deaths / 100k Population)') +
geom_hline(aes(yintercept = median_mortality), colour = 'darkslategray', size = 0.75) +
theme(
plot.title = element_text(size = 28),
plot.subtitle = element_text(size = 18, face = 'italic'),
axis.title = element_text(size = 22),
plot.caption = element_text(size = 14, face = 'italic', hjust = 0),
axis.text = element_text(size = 20),
legend.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.position = 'right',
panel.grid.minor = element_blank()
)
gdp_rank_plot = ggplot(us_comparator_countries, aes(country_ranked_gdp, diff_projection_avg/100, fill = diff_projection_avg/100)) +
geom_bar(stat = 'identity', fill = 'steelblue') +
geom_bar(data = filter(us_comparator_countries, country == 'United States'), fill = 'firebrick', stat = 'identity') +
coord_flip() +
theme_bw() +
scale_y_continuous(labels = percent) +
labs(
title = 'COVID Economic Impact',
subtitle = 'High income countries, minimum 5M population.',
caption = '\n\n\n',
x = '', y = '\nReal GDP Growth\nProjected Difference from Three Year Average') +
geom_hline(aes(yintercept = median_econ_impact/100), colour = 'darkslategray', size = 0.75) +
# geom_segment(aes(x = 5, xend = 20, y = .95 * min(diff_projection_avg/100) , yend = .95 * min(diff_projection_avg/100)), size = 1) +
theme(
plot.title = element_text(size = 28),
plot.subtitle = element_text(size = 18, face = 'italic'),
axis.title = element_text(size = 22),
plot.caption = element_text(size = 14, face = 'italic', hjust = 0),
axis.text = element_text(size = 20),
legend.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.position = 'right',
panel.grid.minor = element_blank()
)
gdp_rank_plot
combined_plot = plot_grid(mortality_rank_plot, gdp_rank_plot)
save_plot('mortality_growth_comparison_oecd.png', base_height = 15, base_width = 18,
units = 'in', dpi = 600, plot = combined_plot)
save_plot('mortality_growth_comparison_oecd.png', base_height = 15, base_width = 20,
units = 'in', dpi = 600, plot = combined_plot)
ggplot(stacked_daily_stats_selected_regions, aes(date, roll_7_new_deaths_per_100k, colour = region_factor)) +
geom_line(size = 1) +
labs(
y = '7 Day Average of Daily Mortality\nPer 100k Population',
x = '',
caption = 'Chart: Taylor G. White\nData: Johns Hopkins CSSE',
title = 'COVID-19 Daily Mortality, by Region',
subtitle = sprintf('Data through %s', max(stacked_daily_stats_selected_regions$date, na.rm = T) %>% format('%b %d'))
) +
theme_bw() +
# geom_point(data = peak_mortality_dates, aes(peak_mortality_date, peak_mortality, colour = region), size = 3.5, pch = 18) +
theme(
plot.title = element_text(size = 22),
plot.subtitle = element_text(size = 14, face = 'italic'),
plot.caption = element_text(hjust = 0, face = 'italic', size = 11),
axis.text = element_text(size = 14),
axis.title = element_text(size = 15),
legend.text = element_text(size = 15),
legend.title = element_text(size = 16),
legend.position = 'bottom'
) +
scale_color_brewer(name = 'Region / Country', palette = 'Set1') +
# scale_colour_hue() +
scale_x_date(date_breaks = '1 month', date_labels = '%b', limits = c(as.Date('2020-03-01'), max(stats_by_region$date))) +
guides(colour = guide_legend(override.aes = list(size = 2.5)))
ggsave('average_daily_mortality_by_region.png', height= 10, width = 12, units = 'in', dpi = 600)
ggplot(stacked_daily_stats_selected_regions, aes(date, roll_7_new_deaths_per_100k, colour = region_factor)) +
geom_line(size = 1) +
labs(
y = '7 Day Average of Daily Mortality\nPer 100k Population',
x = '',
caption = sprintf('Chart: Taylor G. White\nData: Johns Hopkins CSSE. Data through %s', max(stacked_daily_stats_selected_regions$date, na.rm = T) %>% format('%b %d')),
title = 'COVID-19 Daily Mortality, by Region'
) +
theme_bw() +
# geom_point(data = peak_mortality_dates, aes(peak_mortality_date, peak_mortality, colour = region), size = 3.5, pch = 18) +
theme(
plot.title = element_text(size = 22),
plot.subtitle = element_text(size = 14, face = 'italic'),
plot.caption = element_text(hjust = 0, face = 'italic', size = 11),
axis.text = element_text(size = 14),
axis.title = element_text(size = 15),
legend.text = element_text(size = 15),
legend.title = element_text(size = 16),
legend.position = 'top'
) +
scale_color_brewer(name = '', palette = 'Set1') +
# scale_colour_hue() +
scale_x_date(date_breaks = '1 month', date_labels = '%b', limits = c(as.Date('2020-03-01'), max(stats_by_region$date))) +
guides(colour = guide_legend(override.aes = list(size = 2.5)))
ggsave('average_daily_mortality_by_region.png', height= 10, width = 12, units = 'in', dpi = 600)
ggplot(stacked_daily_stats_selected_regions, aes(date, roll_7_new_deaths_per_100k, colour = region_factor)) +
geom_line(size = 1) +
labs(
y = '7 Day Average of Daily Mortality\nPer 100k Population',
x = '',
caption = sprintf('Chart: Taylor G. White\nData: Johns Hopkins CSSE\nData through %s', max(stacked_daily_stats_selected_regions$date, na.rm = T) %>% format('%b %d')),
title = 'COVID-19 Daily Mortality, by Region'
) +
theme_bw() +
# geom_point(data = peak_mortality_dates, aes(peak_mortality_date, peak_mortality, colour = region), size = 3.5, pch = 18) +
theme(
plot.title = element_text(size = 22),
plot.subtitle = element_text(size = 14, face = 'italic'),
plot.caption = element_text(hjust = 0, face = 'italic', size = 11),
axis.text = element_text(size = 14),
axis.title = element_text(size = 15),
legend.text = element_text(size = 15),
legend.title = element_text(size = 16),
legend.position = 'bottom'
) +
scale_color_brewer(name = '', palette = 'Set1') +
# scale_colour_hue() +
scale_x_date(date_breaks = '1 month', date_labels = '%b', limits = c(as.Date('2020-03-01'), max(stats_by_region$date))) +
guides(colour = guide_legend(override.aes = list(size = 2.5)))
ggsave('average_daily_mortality_by_region.png', height= 10, width = 12, units = 'in', dpi = 600)
selected_european_countries = c('Sweden', 'Denmark', 'Finland', 'Norway', 'Germany', 'Italy', 'Spain', 'France', 'United Kingdom', 'Ireland')
ggplot(europe_map_data) +
geom_sf(aes(fill = mortality_per_100k)) +
scale_fill_viridis_c(name = 'Deaths Per\n100k Pop.',option = 'A') +
theme_map() +
# theme_dark() +
# theme_minimal() +
geom_sf_label(data = filter(europe_map_data, name %in% selected_european_countries), aes(label = paste0(name, '\n', comma(mortality_per_100k, accuracy = 0.1))), size = 3.5) +
labs(
x = '', y = '',
title = 'COVID-19 Mortality Rates in Europe',
subtitle = sprintf('Data through %s', max(covid_stats_by_country$as_of_date, na.rm=T) %>% format('%b %d, %Y')),
caption = 'Chart: Taylor G. White\nData: Johns Hopkins CSSE, World Bank'
) +
theme(
# axis.text = element_blank(),
plot.subtitle = element_text(face = 'italic'),
plot.caption = element_text(hjust = 0, face = 'italic')
)
# dir.create('~/Public_Policy/Projects/COVID-19 Mismanagement/output')
ggsave('europe_mortality_rate_map.png', height = 9, width = 12, units = 'in', dpi = 600)
filter(us_comparator_countries, country %in% c('United States','Japan', 'Denmark', 'Finland', 'Sweden', 'Norway')) %>%
select(country, three_year_avg_growth, projection_2020, diff_projection_avg, mortality_per_100k) %>%
write.csv('comparison_stats_nordics.csv', row.names = F)
head(us_comparator_countries)
filter(us_comparator_countries, country %in% c('United States','Japan', 'Denmark', 'Finland', 'Sweden', 'Norway')) %>%
select(country, three_year_avg_growth, projection_2020, diff_projection_avg, mortality_per_100k, population, median_stringency) %>%
write.csv('comparison_stats_nordics.csv', row.names = F)
filter(us_comparator_countries, country %in% c('United States','Japan', 'Denmark', 'Finland', 'Sweden', 'Norway')) %>%
select(country, three_year_avg_growth, projection_2020, diff_projection_avg, mortality_per_100k, population, median_stringency, gdp_per_capita_us, trade_pct_gdp ) %>%
write.csv('comparison_stats_nordics.csv', row.names = F)
head(us_comparator_countries)
filter(us_comparator_countries, country %in% c('United States','Japan', 'Denmark', 'Finland', 'Sweden', 'Norway')) %>%
select(country, three_year_avg_growth, projection_2020, diff_projection_avg, mortality_per_100k, population, median_stringency, max_stringency, gdp_per_capita_us, trade_pct_gdp ) %>%
write.csv('comparison_stats_nordics.csv', row.names = F)
filter(us_comparator_countries, country %in% c('United States','Japan', 'Denmark', 'Finland', 'Sweden', 'Norway')) %>%
select(country, three_year_avg_growth, projection_2020, diff_projection_avg, mortality_per_100k, population, median_stringency, max_stringency, gdp_per_capita_us, trade_pct_gdp ) %>%
write.csv('comparison_stats_nordics.csv', row.names = F)
46 / 63
1 - (46 / 63)
names(us_comparator_countries)
filter(us_comparator_countries, country %in% c('United States','Japan', 'Denmark', 'Finland', 'Sweden', 'Norway')) %>%
select(country, three_year_avg_growth, projection_2020, diff_projection_avg, mortality_per_100k, population, median_stringency, max_stringency, gdp_per_capita_us, trade_pct_gdp, pop_pct_65_over) %>%
write.csv('comparison_stats_nordics.csv', row.names = F)
filter(us_comparator_countries, country %in% c('United States','Japan', 'Denmark', 'Finland', 'Sweden', 'Norway')) %>%
select(country, three_year_avg_growth, projection_2020, diff_projection_avg, mortality_per_100k, population, median_stringency, max_stringency, gdp_per_capita_us, trade_pct_gdp, pop_pct_65_over) %>%
write.csv('comparison_stats_nordics.csv', row.names = F)
(us_data$population / 1e5) * median_mortality
median_mortality
us_comparator_countries$total_deaths
us_data$total_deaths
(us_data$population / 1e5) * 55
(us_data$population / 1e5) * 60
us_data$mortality_per_100k
(us_data$population / 1e5) * 67
(us_data$population / 1e5) * median_mortality
us_data$mortality_per_100k - (us_data$population / 1e5) * median_mortality
us_data$mortality_per_100k - ((us_data$population / 1e5) * median_mortality)
us_data$total_deaths - ((us_data$population / 1e5) * median_mortality)
((us_data$population / 1e5) * median_mortality)
superior_countries = filter(us_comparator_countries, mortality_per_100k <= us_calcs$mortality_per_100k & diff_projection_avg >= us_calcs$diff_projection_avg, country != 'United States')
length(superior_countries$country) / nrow(us_comparator_countries)
superior_countries
superior_countries$country
