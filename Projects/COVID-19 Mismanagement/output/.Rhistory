geom_point() +
stat_smooth(span = 1)
ggplot(covid_stats_by_country, aes(log(international_tourism), log(mortality_per_100k_log))) +
facet_wrap(~continent) +
geom_point(aes(size = gdp_per_capita_us)) +
stat_smooth(span = 1)
##### analysis data -- combine everything, compute stats by country #####
covid_stats_by_country =
covid_deaths_by_country_date_diffs %>%
group_by(country, income) %>%
summarize(
as_of_date = max(date, na.rm = T),
total_deaths = max(cumulative_deaths, na.rm = T),
mean_mobility = mean(mobility, na.rm = T),
median_mobility = median(mobility, na.rm = T),
max_stringency = max(StringencyIndex, na.rm = T),
median_stringency = median(StringencyIndex, na.rm = T),
median_ContainmentHealthIndex = median(ContainmentHealthIndex, na.rm = T),
max_ContainmentHealthIndex = max(ContainmentHealthIndex, na.rm = T),
mean_stringency = mean(StringencyIndex, na.rm = T),
mean_new_deaths_pct_of_max = mean(new_deaths_pct_of_max, na.rm = T),
mean_new_deaths_per_100k = mean(new_deaths_per_100k, na.rm = T),
mortality_per_100k = max(mortality_per_100k)
) %>%
ungroup() %>%
arrange(mortality_per_100k) %>%
mutate(
country_ranked_mortality = factor(country, levels = rev(country)),
country_factor = factor(country, levels = rev(country))
) %>%
left_join(
imf_real_gdp_projections, by = c('country' =   "entity")
) %>%
left_join(
latest_country_pop
) %>%
rename(
projection_2020 = `2020`
) %>%
filter(population > 5e6, projection_2020 >= -15) %>%
mutate(
three_year_avg_growth = (`2019` + `2018` + `2017` ) / 3,
two_year_avg_growth = (`2019` + `2018`) / 2,
last_year_growth = `2019`,
diff_projection_avg = (1 - ((1 + three_year_avg_growth / 100) / (1 + projection_2020/100))) * 100,
diff_projection_avg_simple = projection_2020 - three_year_avg_growth,
international_tourism_pop = international_tourism / population
) %>%
arrange(-diff_projection_avg) %>%
mutate(
country_ranked_gdp = factor(country, levels = rev(country)),
) %>%
arrange(-gdp_per_capita_us)
covid_stats_by_country$geometry = NULL
min_mortality_not_zero = covid_stats_by_country$mortality_per_100k[covid_stats_by_country$mortality_per_100k > 0] %>% min()
covid_stats_by_country$mortality_per_100k_log = ifelse(covid_stats_by_country$mortality_per_100k == 0, min_mortality_not_zero, covid_stats_by_country$mortality_per_100k)
ggplot(covid_stats_by_country, aes(log(international_tourism), log(mortality_per_100k_log))) +
geom_point(aes(colour = region)) +
stat_smooth(span = 1)
ggplot(covid_stats_by_country, aes(international_tourism_pop, log(mortality_per_100k_log))) +
geom_point(aes(colour = region)) +
stat_smooth(span = 1)
ggplot(covid_stats_by_country, aes(international_tourism_pop, log(mortality_per_100k_log))) +
facet_wrap(~continent) +
geom_point(aes(size = gdp_per_capita_us)) +
stat_smooth(span = 1)
ggplot(covid_stats_by_country, aes(international_tourism_pop, log(mortality_per_100k_log))) +
facet_wrap(~continent, scales = 'free_x') +
geom_point(aes(size = gdp_per_capita_us)) +
stat_smooth(span = 1)
list.files()
##### OECD Data #####
setwd("~/Public_Policy/Projects/COVID-19 Mismanagement/data/OECD")
list.files()
trust_in_government = read('DP_LIVE_30102020213545055.csv')
trust_in_government = fread('DP_LIVE_30102020213545055.csv')
trust_in_government
trust_in_government$TIME
trust_in_government$TIME %>% unique()
trust_in_government = fread('DP_LIVE_30102020213545055.csv') %>%
mutate(
country = countrycode(LOCATION, origin = 'iso3c', destination = 'country.name'),
trust_in_government_pct = Value / 100
)
##### OECD Data trust in government #####
setwd("~/Public_Policy/Projects/COVID-19 Mismanagement/data/OECD")
trust_in_government = fread('DP_LIVE_30102020213545055.csv') %>%
mutate(
country = countrycode(LOCATION, origin = 'iso3c', destination = 'country.name'),
trust_in_government_pct = Value / 100
)
trust_in_government
trust_in_government = fread('DP_LIVE_30102020213545055.csv') %>%
mutate(
country = countrycode(LOCATION, origin = 'iso3c', destination = 'country.name'),
trust_in_government_pct = Value / 100
) %>%
rename(
year = TIME
)
summarize_if(is.character, unique)
summarize_if(trust_in_government, is.character, unique)
trust_in_government
trust_in_government = fread('DP_LIVE_30102020213545055.csv') %>%
mutate(
country = countrycode(LOCATION, origin = 'iso3c', destination = 'country.name'),
trust_in_government_pct = Value / 100
) %>%
rename(
year = TIME
) %>%
group_by(country) %>%
summarize(
mean_trust_in_gov = mean(trust_in_government_pct),
last_trust_in_gov = trust_in_government_pct[year == max(year)]
)
trust_in_government = fread('DP_LIVE_30102020213545055.csv') %>%
mutate(
country = countrycode(LOCATION, origin = 'iso3c', destination = 'country.name'),
trust_in_government_pct = Value / 100
) %>%
rename(
year = TIME
) %>%
group_by(country) %>%
summarize(
mean_trust_in_gov = mean(trust_in_government_pct),
last_trust_in_gov = trust_in_government_pct[year == max(year)]
) %>%
ungroup()
trust_in_government
latest_country_pop = filter(wdi_data_wide) %>%
group_by(country, income, region) %>%
summarize(
latest_pop_year = max(year[!is.na(SP.POP.TOTL)], na.rm = T),
population = SP.POP.TOTL[year == latest_pop_year],
gini_index = tail(SI.POV.GINI[!is.na(SI.POV.GINI)], 1),
international_tourism = tail(ST.INT.ARVL[!is.na(ST.INT.ARVL)], 1),
trade_pct_gdp = tail(NE.TRD.GNFS.ZS[!is.na(NE.TRD.GNFS.ZS)], 1) / 100,
gdp_per_capita_us = tail(NY.GDP.PCAP.CD[!is.na(NY.GDP.PCAP.CD)], 1),
pop_pct_65_over = tail(SP.POP.65UP.TO.ZS[!is.na(SP.POP.65UP.TO.ZS)], 1) / 100,
health_exp_gdp = tail(SH.XPD.CHEX.GD.ZS[!is.na(SH.XPD.CHEX.GD.ZS)], 1) / 100
) %>%
rename(
year = latest_pop_year
) %>%
left_join(world, by = c('country'= 'name')) %>%
left_join(trust_in_government) %>%
mutate(
country = recode(country, `Korea, Rep.` = 'South Korea', `Russian Federation` = 'Russia')
)
latest_country_pop
latest_country_pop$mean_trust_in_gov
covid_deaths_by_country_date_diffs = covid_deaths_by_country_date[, {
new_deaths = c(NA, diff(cumulative_deaths))
death_50_date = date[cumulative_deaths >= 50][1]
days_since_death_50_date = as.numeric(date - death_50_date)
new_cases = c(NA, diff(cumulative_cases))
roll_7_new_cases = c(rep(NA, 6), roll_mean(new_cases, 7))
list(
days_since_death_50_date = days_since_death_50_date,
date = date,
new_deaths = new_deaths,
new_cases = new_cases,
roll_7_new_cases = roll_7_new_cases,
new_deaths_pct_of_max = new_deaths / max(new_deaths, na.rm = T),
roll_7_new_deaths = c(rep(NA, 6), roll_mean(new_deaths, 7)),
cumulative_cases = cumulative_cases,
cumulative_deaths = cumulative_deaths,
ContainmentHealthIndex  = ContainmentHealthIndex ,
EconomicSupportIndex = EconomicSupportIndex ,
GovernmentResponseIndex = GovernmentResponseIndex ,
StringencyIndex = StringencyIndex ,
one_week_stringency = c(rep(NA, 6), roll_mean(StringencyIndex, 7)),
two_week_stringency = c(rep(NA, 13), roll_mean(StringencyIndex, 14)),
Stringency_z = Stringency_z,
Stringency_median_over_iqr = Stringency_median_over_iqr,
StringencyIndex_percentile = cume_dist(StringencyIndex),
change_StringencyIndex = c(NA, diff(StringencyIndex, 1)),
mobility = mobility,
avg_7_mobility = c(rep(NA, 6), roll_mean(mobility, 7)),
daily_cumulative_deaths_percent_of_total = cumulative_cases / max(cumulative_cases)
)
}, by = list(country)] %>%
left_join(latest_country_pop) %>%
mutate(
new_deaths_per_100k = (new_deaths / population) * 1e5,
roll_7_new_cases_per_100k = (roll_7_new_cases / population) * 1e5,
roll_7_new_deaths_per_100k = (roll_7_new_deaths / population) * 1e5,
new_cases_per_100k = (new_cases / population) * 1e5,
mortality_rate = cumulative_deaths / population,
mortality_per_100k = mortality_rate * 1e5
)
covid_deaths_by_country_date_diffs_dt = data.table(arrange(covid_deaths_by_country_date_diffs, region, country, date))
stats_by_region = covid_deaths_by_country_date_diffs_dt[!is.na(date),{
the_countries = country
total_pop = sum(filter(latest_country_pop, country %in% the_countries)$population, na.rm = T)
country_df = data.frame(country, date, new_deaths) %>%
group_by(date) %>%
summarize(
total_new_deaths = sum(new_deaths, na.rm = T)
) %>%
ungroup() %>%
mutate(
total_new_deaths_100k = (total_new_deaths / total_pop) * 1e5,
total_new_death_100k_roll_7 = c(rep(NA, 6), roll_mean(total_new_deaths_100k, 7))
)
country_df
}, by = list(region)] %>%
filter(!is.na(region))
##### analysis data -- combine everything, compute stats by country #####
covid_stats_by_country =
covid_deaths_by_country_date_diffs %>%
group_by(country, income) %>%
summarize(
as_of_date = max(date, na.rm = T),
total_deaths = max(cumulative_deaths, na.rm = T),
mean_mobility = mean(mobility, na.rm = T),
median_mobility = median(mobility, na.rm = T),
max_stringency = max(StringencyIndex, na.rm = T),
median_stringency = median(StringencyIndex, na.rm = T),
median_ContainmentHealthIndex = median(ContainmentHealthIndex, na.rm = T),
max_ContainmentHealthIndex = max(ContainmentHealthIndex, na.rm = T),
mean_stringency = mean(StringencyIndex, na.rm = T),
mean_new_deaths_pct_of_max = mean(new_deaths_pct_of_max, na.rm = T),
mean_new_deaths_per_100k = mean(new_deaths_per_100k, na.rm = T),
mortality_per_100k = max(mortality_per_100k)
) %>%
ungroup() %>%
arrange(mortality_per_100k) %>%
mutate(
country_ranked_mortality = factor(country, levels = rev(country)),
country_factor = factor(country, levels = rev(country))
) %>%
left_join(
imf_real_gdp_projections, by = c('country' =   "entity")
) %>%
left_join(
latest_country_pop
) %>%
rename(
projection_2020 = `2020`
) %>%
filter(population > 5e6, projection_2020 >= -15) %>%
mutate(
three_year_avg_growth = (`2019` + `2018` + `2017` ) / 3,
two_year_avg_growth = (`2019` + `2018`) / 2,
last_year_growth = `2019`,
diff_projection_avg = (1 - ((1 + three_year_avg_growth / 100) / (1 + projection_2020/100))) * 100,
diff_projection_avg_simple = projection_2020 - three_year_avg_growth,
international_tourism_pop = international_tourism / population
) %>%
arrange(-diff_projection_avg) %>%
mutate(
country_ranked_gdp = factor(country, levels = rev(country)),
) %>%
arrange(-gdp_per_capita_us)
ggplot(covid_stats_by_country, aes(last_trust_in_gov, log(mortality_per_100k_log))) +
geom_point()
covid_stats_by_country$last_trust_in_gov
covid_stats_by_country$geometry = NULL
min_mortality_not_zero = covid_stats_by_country$mortality_per_100k[covid_stats_by_country$mortality_per_100k > 0] %>% min()
covid_stats_by_country$mortality_per_100k_log = ifelse(covid_stats_by_country$mortality_per_100k == 0, min_mortality_not_zero, covid_stats_by_country$mortality_per_100k)
ggplot(covid_stats_by_country, aes(last_trust_in_gov, log(mortality_per_100k_log))) +
geom_point()
ggplot(covid_stats_by_country, aes(last_trust_in_gov, log(mortality_per_100k_log))) +
geom_point() +
stat_smooth(method = 'lm')
View(covid_stats_by_country)
ggplot(covid_stats_by_country, aes(country, last_trust_in_gov)) +
geom_bar(stat = 'identity')
ggplot(covid_stats_by_country %>% filter(!is.na(last_trust_in_gov)), aes(last_trust_in_gov, log(mortality_per_100k_log))) +
geom_point() +
stat_smooth(method = 'lm')
ggplot(covid_stats_by_country%>% filter(!is.na(last_trust_in_gov)), aes(country, last_trust_in_gov)) +
geom_bar(stat = 'identity')
ggplot(covid_stats_by_country , aes(gini_index, last_trust_in_gov)) +
geom_point() +
stat_smooth(method = 'lm')
ggplot(covid_stats_by_country , aes(gini_index, last_trust_in_gov)) +
geom_point() +
geom_quantile()
ggplot(covid_stats_by_country , aes(gini_index, last_trust_in_gov)) +
geom_point() +
geom_quantile(quantiles = 0.5)
ggplot(covid_stats_by_country , aes(gini_index, last_trust_in_gov)) +
geom_point(aes(size = mortality_per_100k_log)) +
geom_quantile(quantiles = 0.5)
ggplot(covid_stats_by_country , aes(gini_index, last_trust_in_gov)) +
# geom_point(aes(size = mortality_per_100k_log)) +
geom_text(aes(label = country)) +
geom_quantile(quantiles = 0.5)
ggplot(covid_stats_by_country , aes(gini_index, last_trust_in_gov)) +
# geom_point(aes(size = mortality_per_100k_log)) +
geom_text(aes(label = country)) +
scale_y_continuous(labels = percent) +
geom_quantile(quantiles = 0.5)
ggplot(covid_stats_by_country , aes(gini_index, last_trust_in_gov)) +
# geom_point(aes(size = mortality_per_100k_log)) +
geom_text(aes(label = country)) +
labs(x = 'GINI Index (Inequality)', y = 'Trust in National Government') +
scale_y_continuous(labels = percent) +
geom_quantile(quantiles = 0.5, size = 1)
getwd()
##### rank plots #####
setwd("~/Public_Policy/Projects/COVID-19 Mismanagement/output")
ggplot(covid_stats_by_country , aes(gini_index, last_trust_in_gov)) +
# geom_point(aes(size = mortality_per_100k_log)) +
geom_text(aes(label = country)) +
labs(x = 'GINI Index (Inequality)', y = 'Trust in National Government') +
scale_y_continuous(labels = percent) +
geom_quantile(quantiles = 0.5, size = 1)
ggplot(covid_stats_by_country , aes(gini_index, last_trust_in_gov)) +
theme_bw() +
# geom_point(aes(size = mortality_per_100k_log)) +
geom_text(aes(label = country)) +
large_text_theme +
labs(x = 'GINI Index (Inequality)', y = 'Trust in National Government') +
scale_y_continuous(labels = percent) +
geom_quantile(quantiles = 0.5, size = 1)
large_text_theme = theme(
plot.title = element_text(size = 24),
plot.subtitle = element_text(size = 18, face = 'italic'),
plot.caption = element_text(size = 13, face = 'italic', hjust = 0),
axis.text = element_text(size = 16),
axis.title = element_text(size = 18)
)
ggplot(covid_stats_by_country , aes(gini_index, last_trust_in_gov)) +
theme_bw() +
# geom_point(aes(size = mortality_per_100k_log)) +
geom_text(aes(label = country)) +
large_text_theme +
labs(x = 'GINI Index (Inequality)', y = 'Trust in National Government') +
scale_y_continuous(labels = percent) +
geom_quantile(quantiles = 0.5, size = 1)
# stat_smooth(method = 'lm')
ggsave('inequality_vs_trust.png', height = 8, width = 8, units = 'in')
ggplot(covid_stats_by_country , aes(gini_index, last_trust_in_gov)) +
theme_bw() +
# geom_point(aes(size = mortality_per_100k_log)) +
geom_text_repel(aes(label = country)) +
large_text_theme +
labs(x = 'GINI Index (Inequality)', y = 'Trust in National Government') +
scale_y_continuous(labels = percent) +
geom_quantile(quantiles = 0.5, size = 1)
library(ggrepel)
ggplot(covid_stats_by_country , aes(gini_index, last_trust_in_gov)) +
theme_bw() +
# geom_point(aes(size = mortality_per_100k_log)) +
geom_text_repel(aes(label = country)) +
large_text_theme +
labs(x = 'GINI Index (Inequality)', y = 'Trust in National Government') +
scale_y_continuous(labels = percent) +
geom_quantile(quantiles = 0.5, size = 1)
# stat_smooth(method = 'lm')
ggsave('inequality_vs_trust.png', height = 8, width = 10, units = 'in')
ggplot(covid_stats_by_country , aes(gini_index, last_trust_in_gov)) +
theme_bw() +
# geom_point(aes(size = mortality_per_100k_log)) +
geom_text_repel(aes(label = country)) +
large_text_theme +
labs(x = 'GINI Index (Inequality)', y = 'Trust in National Government') +
scale_y_continuous(labels = percent) +
geom_quantile(quantiles = 0.5, size = 1)
# stat_smooth(method = 'lm')
ggsave('inequality_vs_trust.png', height = 8, width = 10, units = 'in')
europe_map_data = left_join(europe_cropped, covid_stats_by_country, by = c('name' = 'country'))
ggplot(europe_map_data) +
geom_sf(aes(fill = trust_in_government_pct)) +
scale_fill_viridis_c(name = 'Deaths Per\n100k Pop.',option = 'A') +
theme_map() +
# theme_dark() +
# theme_minimal() +
geom_sf_label(data = filter(europe_map_data, name %in% selected_european_countries), aes(label = paste0(name, '\n', comma(mortality_per_100k, accuracy = 0.1))), size = 3.5) +
labs(
x = '', y = '',
title = 'COVID-19 Mortality Rates in Europe',
subtitle = sprintf('Data through %s', max(covid_stats_by_country$as_of_date, na.rm=T) %>% format('%b %d, %Y')),
caption = 'Chart: Taylor G. White\nData: Johns Hopkins CSSE, World Bank'
) +
theme(
# axis.text = element_blank(),
plot.subtitle = element_text(face = 'italic'),
plot.caption = element_text(hjust = 0, face = 'italic')
)
ggplot(europe_map_data) +
geom_sf(aes(fill = trust_in_government_pct)) +
scale_fill_viridis_c(name = 'Deaths Per\n100k Pop.',option = 'A') +
theme_map() +
# theme_dark() +
# theme_minimal() +
# geom_sf_label(data = filter(europe_map_data, name %in% selected_european_countries), aes(label = paste0(name, '\n', comma(mortality_per_100k, accuracy = 0.1))), size = 3.5) +
labs(
x = '', y = '',
title = 'COVID-19 Mortality Rates in Europe',
subtitle = sprintf('Data through %s', max(covid_stats_by_country$as_of_date, na.rm=T) %>% format('%b %d, %Y')),
caption = 'Chart: Taylor G. White\nData: Johns Hopkins CSSE, World Bank'
) +
theme(
# axis.text = element_blank(),
plot.subtitle = element_text(face = 'italic'),
plot.caption = element_text(hjust = 0, face = 'italic')
)
ggplot(europe_map_data) +
geom_sf(aes(fill = last_trust_in_gov)) +
scale_fill_viridis_c(name = 'Deaths Per\n100k Pop.',option = 'A') +
theme_map() +
# theme_dark() +
# theme_minimal() +
# geom_sf_label(data = filter(europe_map_data, name %in% selected_european_countries), aes(label = paste0(name, '\n', comma(mortality_per_100k, accuracy = 0.1))), size = 3.5) +
labs(
x = '', y = '',
title = 'COVID-19 Mortality Rates in Europe',
subtitle = sprintf('Data through %s', max(covid_stats_by_country$as_of_date, na.rm=T) %>% format('%b %d, %Y')),
caption = 'Chart: Taylor G. White\nData: Johns Hopkins CSSE, World Bank'
) +
theme(
# axis.text = element_blank(),
plot.subtitle = element_text(face = 'italic'),
plot.caption = element_text(hjust = 0, face = 'italic')
)
ggplot(europe_map_data) +
geom_sf(aes(fill = last_trust_in_gov)) +
scale_fill_viridis_c(name = 'Deaths Per\n100k Pop.',option = 'A') +
theme_map() +
# theme_dark() +
# theme_minimal() +
# geom_sf_label(data = filter(europe_map_data, name %in% selected_european_countries), aes(label = paste0(name, '\n', comma(mortality_per_100k, accuracy = 0.1))), size = 3.5) +
labs(
x = '', y = '',
title = 'Trust in Government',
# subtitle = sprintf('Data through %s', max(covid_stats_by_country$as_of_date, na.rm=T) %>% format('%b %d, %Y')),
caption = 'Chart: Taylor G. White\nData: Johns Hopkins CSSE, World Bank'
) +
theme(
# axis.text = element_blank(),
plot.subtitle = element_text(face = 'italic'),
plot.caption = element_text(hjust = 0, face = 'italic')
)
ggplot(europe_map_data) +
geom_sf(aes(fill = gini_index)) +
scale_fill_viridis_c(name = 'Trust in Government',option = 'A') +
theme_map() +
# theme_dark() +
# theme_minimal() +
# geom_sf_label(data = filter(europe_map_data, name %in% selected_european_countries), aes(label = paste0(name, '\n', comma(mortality_per_100k, accuracy = 0.1))), size = 3.5) +
labs(
x = '', y = '',
title = 'Trust in Government',
# subtitle = sprintf('Data through %s', max(covid_stats_by_country$as_of_date, na.rm=T) %>% format('%b %d, %Y')),
caption = 'Chart: Taylor G. White\nData: Johns Hopkins CSSE, World Bank'
) +
theme(
# axis.text = element_blank(),
plot.subtitle = element_text(face = 'italic'),
plot.caption = element_text(hjust = 0, face = 'italic')
)
ggplot(europe_map_data) +
geom_sf(aes(fill = gini_index)) +
scale_fill_viridis_c(name = 'GINI Index',option = 'A') +
theme_map() +
# theme_dark() +
# theme_minimal() +
# geom_sf_label(data = filter(europe_map_data, name %in% selected_european_countries), aes(label = paste0(name, '\n', comma(mortality_per_100k, accuracy = 0.1))), size = 3.5) +
labs(
x = '', y = '',
title = 'Trust in Government',
# subtitle = sprintf('Data through %s', max(covid_stats_by_country$as_of_date, na.rm=T) %>% format('%b %d, %Y')),
caption = 'Chart: Taylor G. White\nData: Johns Hopkins CSSE, World Bank'
) +
theme(
# axis.text = element_blank(),
plot.subtitle = element_text(face = 'italic'),
plot.caption = element_text(hjust = 0, face = 'italic')
)
ggplot(covid_stats_by_country , aes(gini_index, last_trust_in_gov)) +
theme_bw() +
# geom_point(aes(size = mortality_per_100k_log)) +
geom_text_repel(aes(label = country)) +
large_text_theme +
labs(x = 'GINI Index (Inequality)', y = 'Trust in National Government') +
scale_y_continuous(labels = percent) +
geom_quantile(quantiles = 0.5, size = 1)
ggplot(covid_stats_by_country , aes(gini_index, last_trust_in_gov)) +
theme_bw() +
# geom_point(aes(size = mortality_per_100k_log)) +
geom_text_repel(aes(label = country)) +
large_text_theme +
labs(x = 'GINI Index (Inequality)', y = 'Trust in National Government', title = 'Income Inequality vs. Trust in Government') +
scale_y_continuous(labels = percent) +
geom_quantile(quantiles = 0.5, size = 1)
# stat_smooth(method = 'lm')
ggsave('inequality_vs_trust.png', height = 8, width = 10, units = 'in')
ggplot(covid_stats_by_country , aes(gini_index, last_trust_in_gov)) +
theme_bw() +
# geom_point(aes(size = mortality_per_100k_log)) +
geom_text_repel(aes(label = country)) +
large_text_theme +
labs(x = 'GINI Index (Inequality)', y = 'Trust in National Government', title = 'Income Inequality vs. Trust in Government') +
scale_y_continuous(labels = percent) +
coord_equal() +
geom_quantile(quantiles = 0.5, size = 1)
ggplot(covid_stats_by_country , aes(gini_index, last_trust_in_gov)) +
theme_bw() +
# geom_point(aes(size = mortality_per_100k_log)) +
geom_text_repel(aes(label = country)) +
large_text_theme +
labs(x = 'GINI Index (Inequality)', y = 'Trust in National Government', title = 'Income Inequality vs. Trust in Government') +
scale_y_continuous(labels = percent) +
geom_quantile(quantiles = 0.5, size = 1)
# stat_smooth(method = 'lm')
ggsave('inequality_vs_trust.png', height = 8, width = 10, units = 'in')
